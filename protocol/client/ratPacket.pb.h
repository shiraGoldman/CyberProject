// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ratPacket.proto

#ifndef PROTOBUF_ratPacket_2eproto__INCLUDED
#define PROTOBUF_ratPacket_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_ratPacket_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsPacketImpl();
void InitDefaultsPacket();
inline void InitDefaults() {
  InitDefaultsPacket();
}
}  // namespace protobuf_ratPacket_2eproto
namespace cyber_project {
class Packet;
class PacketDefaultTypeInternal;
extern PacketDefaultTypeInternal _Packet_default_instance_;
}  // namespace cyber_project
namespace cyber_project {

enum Opcode {
  EXECUTE = 0,
  UPDATE = 1,
  FILE = 2
};
bool Opcode_IsValid(int value);
const Opcode Opcode_MIN = EXECUTE;
const Opcode Opcode_MAX = FILE;
const int Opcode_ARRAYSIZE = Opcode_MAX + 1;

const ::google::protobuf::EnumDescriptor* Opcode_descriptor();
inline const ::std::string& Opcode_Name(Opcode value) {
  return ::google::protobuf::internal::NameOfEnum(
    Opcode_descriptor(), value);
}
inline bool Opcode_Parse(
    const ::std::string& name, Opcode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Opcode>(
    Opcode_descriptor(), name, value);
}
// ===================================================================

class Packet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cyber_project.Packet) */ {
 public:
  Packet();
  virtual ~Packet();

  Packet(const Packet& from);

  inline Packet& operator=(const Packet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Packet(Packet&& from) noexcept
    : Packet() {
    *this = ::std::move(from);
  }

  inline Packet& operator=(Packet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Packet& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Packet* internal_default_instance() {
    return reinterpret_cast<const Packet*>(
               &_Packet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Packet* other);
  friend void swap(Packet& a, Packet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Packet* New() const PROTOBUF_FINAL { return New(NULL); }

  Packet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Packet& from);
  void MergeFrom(const Packet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Packet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes content = 4;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 4;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // required int32 seqNumber = 1;
  bool has_seqnumber() const;
  void clear_seqnumber();
  static const int kSeqNumberFieldNumber = 1;
  ::google::protobuf::int32 seqnumber() const;
  void set_seqnumber(::google::protobuf::int32 value);

  // required .cyber_project.Opcode opcode = 2;
  bool has_opcode() const;
  void clear_opcode();
  static const int kOpcodeFieldNumber = 2;
  ::cyber_project::Opcode opcode() const;
  void set_opcode(::cyber_project::Opcode value);

  // required bool isLast = 3;
  bool has_islast() const;
  void clear_islast();
  static const int kIsLastFieldNumber = 3;
  bool islast() const;
  void set_islast(bool value);

  // @@protoc_insertion_point(class_scope:cyber_project.Packet)
 private:
  void set_has_seqnumber();
  void clear_has_seqnumber();
  void set_has_opcode();
  void clear_has_opcode();
  void set_has_islast();
  void clear_has_islast();
  void set_has_content();
  void clear_has_content();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::int32 seqnumber_;
  int opcode_;
  bool islast_;
  friend struct ::protobuf_ratPacket_2eproto::TableStruct;
  friend void ::protobuf_ratPacket_2eproto::InitDefaultsPacketImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Packet

// required int32 seqNumber = 1;
inline bool Packet::has_seqnumber() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Packet::set_has_seqnumber() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Packet::clear_has_seqnumber() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Packet::clear_seqnumber() {
  seqnumber_ = 0;
  clear_has_seqnumber();
}
inline ::google::protobuf::int32 Packet::seqnumber() const {
  // @@protoc_insertion_point(field_get:cyber_project.Packet.seqNumber)
  return seqnumber_;
}
inline void Packet::set_seqnumber(::google::protobuf::int32 value) {
  set_has_seqnumber();
  seqnumber_ = value;
  // @@protoc_insertion_point(field_set:cyber_project.Packet.seqNumber)
}

// required .cyber_project.Opcode opcode = 2;
inline bool Packet::has_opcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Packet::set_has_opcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Packet::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Packet::clear_opcode() {
  opcode_ = 0;
  clear_has_opcode();
}
inline ::cyber_project::Opcode Packet::opcode() const {
  // @@protoc_insertion_point(field_get:cyber_project.Packet.opcode)
  return static_cast< ::cyber_project::Opcode >(opcode_);
}
inline void Packet::set_opcode(::cyber_project::Opcode value) {
  assert(::cyber_project::Opcode_IsValid(value));
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:cyber_project.Packet.opcode)
}

// required bool isLast = 3;
inline bool Packet::has_islast() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Packet::set_has_islast() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Packet::clear_has_islast() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Packet::clear_islast() {
  islast_ = false;
  clear_has_islast();
}
inline bool Packet::islast() const {
  // @@protoc_insertion_point(field_get:cyber_project.Packet.isLast)
  return islast_;
}
inline void Packet::set_islast(bool value) {
  set_has_islast();
  islast_ = value;
  // @@protoc_insertion_point(field_set:cyber_project.Packet.isLast)
}

// required bytes content = 4;
inline bool Packet::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Packet::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Packet::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Packet::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& Packet::content() const {
  // @@protoc_insertion_point(field_get:cyber_project.Packet.content)
  return content_.GetNoArena();
}
inline void Packet::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cyber_project.Packet.content)
}
#if LANG_CXX11
inline void Packet::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cyber_project.Packet.content)
}
#endif
inline void Packet::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cyber_project.Packet.content)
}
inline void Packet::set_content(const void* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cyber_project.Packet.content)
}
inline ::std::string* Packet::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:cyber_project.Packet.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Packet::release_content() {
  // @@protoc_insertion_point(field_release:cyber_project.Packet.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Packet::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:cyber_project.Packet.content)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace cyber_project

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::cyber_project::Opcode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::cyber_project::Opcode>() {
  return ::cyber_project::Opcode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ratPacket_2eproto__INCLUDED
